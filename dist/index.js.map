{"version":3,"sources":["../src/types/communications/endpoint-payloads/verify-otp.payloads.ts","../src/types/generic/endpoints/endpoint.interface.ts","../src/types/communications/endpoint-payloads/resend-otp.payloads.ts","../src/types/merchants/models/merchant.model.ts","../src/types/merchants/endpoint-payloads/login.payloads.ts","../src/types/merchants/endpoint-payloads/fetch-profile.payloads.ts","../src/types/merchants/endpoint-payloads/reserve-email.payloads.ts","../src/types/merchants/endpoint-payloads/get-access-token.payloads.ts","../src/types/merchants/endpoint-payloads/reset-password.payloads.ts","../src/types/stores/endpoint-payloads/list-store-attributes.payloads.ts","../src/types/stores/endpoint-payloads/create-store.payloads.ts","../src/types/stores/endpoint-payloads/product.payloads.ts","../src/types/stores/endpoint-payloads/update-store.payload.ts","../src/types/stores/endpoint-payloads/publish-store.payloads.ts","../src/types/stores/endpoint-payloads/manage-collection.payloads.ts","../src/types/stores/models/product.model.ts"],"sourcesContent":["import { HttpStatusCode } from \"axios\";\nimport { BazeError, Endpoint, HttpMethods } from \"../../generic\";\n\nexport enum OtpContext {\n\tVerifyPhoneNumber = 'verify-phone-number',\n\tVerifyEmail = 'verify-email',\n\tResetPassword = 'reset-password',\n}\n\nexport interface IVerifyOtpPayload {\n    context: OtpContext;\n    token: string;\n}\n\nexport interface IVerifyOtpWithoutAuthPayload {\n\tcontext: OtpContext;\n\ttoken: string;\n\trecipient: string;\n}\n\nexport interface IVerifyOtpResponse {\n    status: boolean;\n    token: string;\n    refreshToken: string;\n}\n\nexport const OtpVerificationErrors: {\n    invalidOtp: BazeError,\n\tretriesUsedUp: BazeError,\n} = {\n\tinvalidOtp: {\n\t\tstatusCode: HttpStatusCode.BadRequest,\n        code: 'INVALID_OTP',\n\t\tmessage: `This transaction is either invalid or expired`,\n\t\trecommendedActions: [\n\t\t\t`Request a new OTP`\n\t\t]\n\t},\n\tretriesUsedUp: {\n\t\tstatusCode: HttpStatusCode.TooManyRequests,\n        code: 'RETRIES_USED_UP',\n\t\tmessage: `You've tried too many times. Please request a new OTP`,\n\t\trecommendedActions: [\n\t\t\t`Request a new OTP`\n\t\t]\n\t}\n};\n\nexport const VerifyOtpEndpoint: Endpoint = {\n    path: '/otps',\n    fullPath: '/communications/otps',\n    parentModule: '/communications',\n    method: HttpMethods.Patch\n}","export enum HttpMethods {\n\tPost = 'POST',\n\tPut = 'PUT',\n\tGet = 'GET',\n\tPatch = 'PATCH',\n\tDelete = 'DELETE'\n}\n\nexport interface Endpoint {\n\tpath: string;\n\tfullPath?: string;\n    parentModule?: string;\n\tmethod: HttpMethods;\n}","import { Endpoint, HttpMethods } from \"../../generic\";\n\nexport const ResendOtpForPhoneVerificationEndpoint: Endpoint = {\n    path: '/otps/phone-verification',\n    fullPath: '/communications/otps/phone-verification',\n    parentModule: '/communications',\n    method: HttpMethods.Patch\n}\n\nexport const ResendOtpForPasswordResetEndpoint: Endpoint = {\n    path: '/otps/password-reset',\n    fullPath: '/communications/otps/password-reset',\n    parentModule: '/communications',\n    method: HttpMethods.Patch\n}","import { IBase } from \"../../generic\";\n\nexport interface IPassword extends IBase {\n    token: string;\n\thint: string;\n\tisActive: boolean\n}\n\nexport enum MerchantAccountStatus {\n    EmailReserved = 'email-reserved',\n    Inactive = 'inactive',\n    Deactivated = 'deactivated',\n    Active = 'active'\n}\n\nexport interface IMerchant extends IBase {\n\tstatus: MerchantAccountStatus;\n    email: string;\n    fullName: string;\n    phoneNumber: string;\n    passwords?: Array<IPassword>;\n\tphoneVerified: boolean;\n    hasCreatedStore: boolean;\n}","import { HttpStatusCode } from \"axios\";\nimport { BazeError, Endpoint, HttpMethods } from \"../../generic\";\n\nexport interface ILoginPayload {\n    email: string;\n    password: string;\n}\n\nexport interface ILoginResponse {\n    token: string;\n    refreshToken: string;\n}\n\nexport const LoginErrors: {\n    invalidEmailOrPassword: BazeError;\n    deactivatedAccount: BazeError;\n} = {\n\tinvalidEmailOrPassword: {\n\t\tstatusCode: HttpStatusCode.Unauthorized,\n        code: 'INVALID_EMAIL_OR_PASSWORD',\n\t\tmessage: `The email or password you provided is invalid`,\n\t\trecommendedActions: [\n\t\t\t`Ensure that all your credentials are correct.`,\n\t\t\t`If you're sure that they're correct then you should probably use the \"Forgot Password\" toolkit`\n\t\t]\n\t},\n\tdeactivatedAccount: {\n\t\tstatusCode: HttpStatusCode.Unauthorized,\n        code: 'DEACTIVATED_ACCOUNT',\n\t\tmessage: `Your account has been deactivated`,\n\t\trecommendedActions: [\n\t\t\t`Reach out to support to find out why it was deactivated`\n\t\t]\n\t}\n};\n\nexport const LoginEndpoint: Endpoint = {\n    path: '/auth',\n    fullPath: '/merchants/auth',\n    parentModule: '/merchants',\n    method: HttpMethods.Patch\n}","import { HttpStatusCode } from \"axios\";\nimport { BazeError, Endpoint, HttpMethods } from \"../../generic\";\nimport { IMerchant } from \"../models\";\nimport {IStore} from \"../../stores\";\n\nexport interface IFetchProfileResponse {\n  merchant: IMerchant,\n\tstores: Array<IStore>\n}\n\nexport const FetchProfileErrors: {\n    invalidMerchant: BazeError\n} = {\n\tinvalidMerchant: {\n\t\tstatusCode: HttpStatusCode.BadRequest,\n        code: 'INVALID_MERCHANT',\n\t\tdata: null,\n\t\tmessage: `Invalid merchant requested`,\n\t\trecommendedActions: [\n\t\t\t`Contact support`\n\t\t]\n\t}\n};\n\nexport const ProfileEndpoint: Endpoint = {\n    path: '/profile',\n    fullPath: '/merchants/profile',\n    parentModule: '/merchants',\n    method: HttpMethods.Patch\n}","import { HttpStatusCode } from \"axios\";\nimport { BazeError, Endpoint, HttpMethods } from \"../../generic\";\nimport { IMerchant } from \"../models\";\n\nexport interface IReserveEmailPayload {\n    email: string;\n    phoneNumber: string;\n    password: string;\n    fullName: string;\n}\n\nexport interface IReserveEmailResponse {\n    merchant: IMerchant;\n    token: string;\n}\n\nexport type PhoneOrEmail = 'phone' | 'email';\n\nexport const ReserveEmailErrors: {\n    compromisedPassword: ( changeDate: Date ) => BazeError;\n    duplicateMerchantDetected: ( d: PhoneOrEmail ) => BazeError;\n    invalidPhoneNumber: BazeError;\n\tcouldNotSendOtp: BazeError;\n} = {\n\tinvalidPhoneNumber: {\n\t\tstatusCode: HttpStatusCode.BadRequest,\n        code: 'INVALID_PHONE_NUMBER',\n\t\tmessage: `Your phone number isn't quite what we're expecting`,\n\t\trecommendedActions: [\n\t\t\t`Ensure you're providing a proper mobile number`\n\t\t]\n\t},\n\tduplicateMerchantDetected: ( d: PhoneOrEmail ) => {\n\t\treturn {\n\t\t\tstatusCode: HttpStatusCode.BadRequest,\n            code: 'DUPLICATE_MERCHANT_DETECTED',\n\t\t\tmessage: `The ${d} you provided is already taken please provide another one or retrieve your account`,\n\t\t\trecommendedActions: [\n\t\t\t\t`Confirm that your ${d} is correct`,\n\t\t\t\t`If you're sure it's correct then that probably means you already have an account. Try using the account recovery tool`,\n\t\t\t\t`Provide entirely different details`\n\t\t\t]\n\t\t};\n\t},\n\tcompromisedPassword( changeDate: Date ) {\n\t\treturn {\n\t\t\tstatusCode: HttpStatusCode.BadRequest,\n            code: 'COMPROMISED_PASSWORD',\n\t\t\tmessage: `This password is compromised. It was changed on ${changeDate.toDateString()}`,\n\t\t\trecommendedActions: [\n\t\t\t\t`Try using a totally different password`\n\t\t\t],\n\t\t\tdescription: `This happens when a admin tries to use a password they already changed for some reason in the past`\n\t\t};\n\t},\n\tcouldNotSendOtp: {\n\t\tstatusCode: HttpStatusCode.FailedDependency,\n\t\tcode: 'COULD_NOT_SEND_OTP_TO_RESERVE_EMAIL',\n\t\tmessage: `Your account was created but we couldn't send you an OTP`,\n\t\trecommendedActions: [\n\t\t\t`Login and try again in a few minutes`\n\t\t]\n\t}\n};\n\nexport const ReserveEmailEndpoint: Endpoint = {\n    path: '',\n    fullPath: '/merchants',\n    parentModule: '/merchants',\n    method: HttpMethods.Post\n}","import { Endpoint, HttpMethods } from \"../../generic\";\n\nexport const GetAccessTokenEndpoint: Endpoint = {\n    path: '/auth/token',\n    fullPath: '/merchants/auth/token',\n    parentModule: '/merchants',\n    method: HttpMethods.Get\n}","import { HttpStatusCode } from \"axios\";\nimport { BazeError, Endpoint, HttpMethods } from \"../../generic\";\n\nexport interface IRequestPasswordResetPayload {\n    email: string;\n}\nexport interface IResetPasswordPayload {\n    password: string;\n    confirmPassword: string;\n}\n\nexport const ResetPasswordErrors: {\n    confirmPasswordMismatch: BazeError;\n    lateResetRequest: BazeError;\n} = {\n    confirmPasswordMismatch: {\n        statusCode: HttpStatusCode.BadRequest,\n        code: 'CONFIRM_PASSWORD_MISMATCH',\n        message: `Your password and confirm password don't match`,\n        recommendedActions: [\n            `Ensure both passwords you're providing match`\n        ]\n    },\n    lateResetRequest: {\n        statusCode: HttpStatusCode.ExpectationFailed,\n        code: 'LATE_RESET_REQUEST',\n        message: `We couldn't find an otp verification to verify your password reset`,\n        recommendedActions: [\n            `Restart the process`,\n            `Make sure you reset your password within 5 minutes of verifying the otp you're sent`\n        ]\n    }\n}\n\nexport const ResetPasswordEndpoint: Endpoint = {\n    path: '/auth/passwords',\n    fullPath: '/merchants/auth/passwords',\n    parentModule: '/merchants',\n    method: HttpMethods.Patch\n}\n\nexport const ForgotPasswordEndpoint: Endpoint = {\n    path: '/auth/passwords',\n    fullPath: '/merchants/auth/passwords',\n    parentModule: '/merchants',\n    method: HttpMethods.Post\n}","import {Endpoint, HttpMethods} from \"../../generic\";\nimport { IStoreAttribute, IStoreAttributeOption } from \"../models\";\n\nexport interface IListStoreAttributesResponse {\n    attributes: Array<IStoreAttribute & {\n        options: Array<IStoreAttributeOption>\n    }>\n}\n\nexport const ListStoreAttributesEndpoint: Endpoint = {\n    path: '/active-attributes',\n    fullPath: '/store-mgt/active-attributes',\n    parentModule: '/stores',\n    method: HttpMethods.Get\n}","import {BazeError, Endpoint, HttpMethods, ICloudinaryImage} from \"../../generic\";\nimport {HttpStatusCode} from \"axios\";\nimport { IStore, IStoreConfig } from \"../models\";\n\nexport type IRawStoreConfig = Omit<IStoreConfig, \"createdAt\" | \"_id\" | \"updatedAt\" | \"_deletedAt\">\n\nexport interface ICreateStorePayload {\n    name: string;\n    email: string;\n    contactNumber: string;\n    logo: ICloudinaryImage;\n    heroBg: ICloudinaryImage;\n    allowsMessaging: boolean;\n    heroSectionText: string;\n    shippingAndRefundPolicy: string;\n    address: string;\n    config: Array<IRawStoreConfig>;\n}\n\nexport interface ICreateStoreResponse {\n    store: IStore;\n}\n\nexport const CreateStoreErrors: {\n    noSuchAttribute: BazeError;\n    attributeHasNoSuchOption: ( attrName: string ) => BazeError;\n    requiredAttributeNotProvided: BazeError;\n} = {\n    noSuchAttribute: {\n        statusCode: HttpStatusCode.BadRequest,\n        code: \"NO_SUCH_ATTRIBUTE\",\n        message: `This attribute does not exist`\n    },\n    attributeHasNoSuchOption: ( attrName: string ) => {\n        return {\n            statusCode: HttpStatusCode.BadRequest,\n            code: \"ATTRIBUTE_HAS_NO_SUCH_OPTION\",\n            message: `Attribute ${ attrName } does not accommodate some options provided for it`\n        };\n    },\n    requiredAttributeNotProvided: {\n        statusCode: HttpStatusCode.BadRequest,\n        code: \"REQUIRED_ATTRIBUTE_NOT_PROVIDED\",\n        message: 'Required attribute(s) not provided',\n        recommendedActions: [\n            'Please provide all required attributes'\n        ]\n    }\n};\n\nexport const CreateStoreEndpoint: Endpoint = {\n    path: '/stores',\n    fullPath: '/stores',\n    parentModule: '/stores',\n    method: HttpMethods.Post\n}","import {IProduct, IProductQuantityConfig, IProductVariant, ProductStatus} from \"../models\";\nimport {BazeError, Endpoint, HttpMethods, ICloudinaryImage} from \"../../generic\";\nimport {HttpStatusCode} from \"axios\";\n\nexport const CreateProductErrors: {\n    noSuchStoreForMerchant: BazeError,\n} = {\n    noSuchStoreForMerchant: {\n        statusCode: HttpStatusCode.BadRequest,\n        code: \"NO_SUCH_STORE_FOR_MERCHANT\",\n        message: \"This store does not exist for this merchant\"\n    }\n}\n\nexport const UpdateProductErrors: {\n    noSuchStoreForMerchant: BazeError,\n    noSuchProductInStore: BazeError\n} = {\n    ...CreateProductErrors,\n    noSuchProductInStore: {\n        statusCode: HttpStatusCode.BadRequest,\n        code: \"NO_SUCH_PRODUCT_IN_STORE\",\n        message: \"This product does not exist in this store\"\n    }\n}\n\nexport interface ICreateProductPayload {\n    store: string;\n    name: string;\n    price: number;\n    status: ProductStatus;\n    images?: Array<ICloudinaryImage>;\n    quantity: number;\n    description: string;\n    variantConfig?: {\n        quantityAndPrice: Array<IProductQuantityConfig>;\n        variants: IProductVariant\n    }\n}\n\nexport interface ICreateProductResponse {\n    product: IProduct;\n}\n\nexport interface IListProductsResponse {\n    products: Array<IProduct>;\n}\n\nexport interface IUpdateProductPayload extends Partial<ICreateProductPayload> { }\n\nexport interface IUpdateProductResponse extends ICreateProductResponse {}\nexport interface IViewOneProductResponse extends ICreateProductResponse {}\n\nexport const CreateProductEndpoint: Endpoint = {\n    path: '/products',\n    fullPath: '/products',\n    parentModule: '/products',\n    method: HttpMethods.Post\n}\n\nexport const ListProductsForStoreEndpoint: Endpoint = {\n    path: '/list-for-store',\n    fullPath: '/products/list-for-store',\n    parentModule: '/products',\n    method: HttpMethods.Get\n}\n\nexport const ViewOneProductEndpoint: Endpoint = {\n    path: '/view-one',\n    fullPath: '/products/view-one',\n    parentModule: '/products',\n    method: HttpMethods.Get\n}\n\nexport const UpdateProductEndpoint: Endpoint = {\n    path: '/products',\n    fullPath: '/products',\n    parentModule: '/products',\n    method: HttpMethods.Patch\n}\n","import { HttpStatusCode } from \"axios\";\nimport { BazeError, Endpoint, HttpMethods } from \"../../generic\";\nimport { CreateStoreErrors } from \"./create-store.payloads\";\n\nexport const UpdateStoreErrors: {\n  noSuchStore: BazeError;\n  noSuchAttribute: BazeError;\n  attributeHasNoSuchOption: ( attrName: string ) => BazeError;\n} = {\n  noSuchStore: {\n    statusCode: HttpStatusCode.BadRequest,\n    code: \"NO_SUCH_STORE\",\n    message: `This store does not exist`\n  },\n  noSuchAttribute: CreateStoreErrors.noSuchAttribute,\n  attributeHasNoSuchOption: CreateStoreErrors.attributeHasNoSuchOption\n};\n\nexport const UpdateStoreEndpoint: Endpoint = {\n  path: '/stores',\n  fullPath: '/stores',\n  parentModule: '/stores',\n  method: HttpMethods.Patch\n}\n","import { BazeError, Endpoint, HttpMethods } from \"../../generic\";\nimport { HttpStatusCode } from \"axios\";\nimport { IStore, } from \"../models\";\n\nexport interface IPublishStorePayload {\n\tsubdomain: string;\n}\n\nexport interface IFetchStoreSubdomainSuggestionPayload {\n\tstore: string;\n}\n\nexport interface IFetchStoreSubdomainSuggestionRes {\n\tsuggestedSubdomain: string;\n}\n\nexport interface IPublishStoreRes {\n\tstore: IStore;\n}\n\n\nexport const PublishStoreErrors: {\n\tusedSubdomain: BazeError;\n\tstoreAlreadyPublished: BazeError;\n} = {\n\tusedSubdomain: {\n\t\tstatusCode: HttpStatusCode.BadRequest,\n\t\tmessage: 'This subdomain is already in use by another store',\n\t\tcode: 'USED_SUBDOMAIN',\n\t\trecommendedActions: [\n\t\t\t`Try setting another subdomain`\n\t\t]\n\t},\n\tstoreAlreadyPublished: {\n\t\tstatusCode: HttpStatusCode.BadRequest,\n\t\tmessage: `This store is already published`,\n\t\tcode: 'STORE_ALREADY_PUBLISHED',\n\t}\n};\n\nexport const PublishStoreEndpoint: Endpoint = {\n    path: '/publish',\n    fullPath: '/stores/publish',\n    parentModule: '/stores',\n    method: HttpMethods.Patch\n}\n\nexport const SuggestStoreSubdomainsEndpoint: Endpoint = {\n    path: '/subdomain-suggestions',\n    fullPath: '/stores/subdomain-suggestions',\n    parentModule: '/stores',\n    method: HttpMethods.Get\n}\n","import { Endpoint, HttpMethods } from \"../../generic\"\nimport { ICollection } from \"../models\"\n\nexport enum AddOrRemove {\n    add = 'add',\n    remove = 'remove'\n}\n\nexport interface ICreateCollectionPayload {\n    name: string\n}\n\nexport interface IEditCollectionPayload {\n    name: string\n}\n\nexport interface IManageCollectionProductsPayload {\n    action: AddOrRemove,\n    products: Array<string>\n}\n\nexport interface IChangeCollectionProductsPayload {\n    products: Array<string>\n}\n\nexport interface ICollectionResponse {\n    collection: ICollection\n}\n\nexport interface IListCollectionsResponse {\n    collections: Array<ICollection>\n}\n\nexport const CreateCollectionEndpoint: Endpoint = {\n    path: '/collections',\n    fullPath: '/stores/collections',\n    method: HttpMethods.Post\n}\n\nexport const EditCollectionEndpoint: Endpoint = {\n    path: '/collections',\n    fullPath: '/stores/collections',\n    method: HttpMethods.Patch\n}\n\nexport const ListCollectionsEndpoint: Endpoint = {\n    path: '/collections/list-for-store',\n    fullPath: '/stores/collections/list-for-store',\n    method: HttpMethods.Get\n}\n\nexport const ViewOneCollectionEndpoint: Endpoint = {\n    path: '/collections/view-one',\n    fullPath: '/stores/collections/view-one',\n    method: HttpMethods.Get\n}\n\nexport const DeleteCollectionEndpoint: Endpoint = {\n    path: '/collections',\n    fullPath: '/stores/collections',\n    method: HttpMethods.Delete\n}\n\nexport const ManageCollectionEndpoint: Endpoint = {\n    path: '/collections/products',\n    fullPath: '/stores/collections/products',\n    method: HttpMethods.Patch\n}\n\nexport const ChangeCollectionProductsEndpoint: Endpoint = {\n    path: '/collections/mutations',\n    fullPath: '/stores/collections/mutations',\n    method: HttpMethods.Patch\n}\n\n","import {IBase, ICloudinaryImage} from \"../../generic\";\n\nexport enum ProductStatus {\n    published = 'published',\n    drafted = 'drafted',\n    shelved = 'shelved'\n}\n\nexport type IProductQuantityOption = IBase & {\n    variant: string;\n    option: string;\n}\n\nexport type IProductVariantOption = IBase & {\n    name: string;\n    uuid: string;\n}\n\nexport interface IProductQuantityConfig extends IBase {\n    options: Array<IProductQuantityOption>\n    quantity: number;\n    price: number;\n    uuid: string;\n}\n\nexport interface IProductVariantConfig extends IBase {\n    uuid: string;\n    name: string;\n    options: Array<IProductVariantOption>\n}\n\nexport interface IProductVariant extends IBase {\n    hasDifferentPrices: boolean;\n    config: Array<IProductVariantConfig>\n}\n\nexport interface IProduct extends IBase {\n    store: string;\n    name: string;\n    price: number;\n    status: ProductStatus;\n    images: Array<ICloudinaryImage>;\n    quantity: number;\n    description: string;\n    variantConfig: {\n        quantityAndPrice: Array<IProductQuantityConfig>;\n        variants: IProductVariant\n    }\n}\n"],"mappings":"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","names":["HttpMethods","OtpContext","MerchantAccountStatus","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","HttpStatusCode","AddOrRemove","ProductStatus"]}